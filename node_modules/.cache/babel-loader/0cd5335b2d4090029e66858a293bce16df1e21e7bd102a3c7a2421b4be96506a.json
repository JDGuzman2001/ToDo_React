{"ast":null,"code":"var _jsxFileName = \"D:\\\\Juan_Diego\\\\Projects\\\\React\\\\to-do-list\\\\src\\\\TodoContext\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useLocalStorage } from './useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoContext = /*#__PURE__*/React.createContext();\nfunction TodoProvider({\n  children\n}) {\n  _s();\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error\n  } = useLocalStorage('TODOS_V1', []);\n  const [searchValue, setSearchValue] = React.useState('');\n  const [openModal, setOpenModal] = React.useState(false);\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length;\n  const searchedTodos = todos.filter(todo => {\n    const todoText = todo.text.toLowerCase();\n    const searchText = searchValue.toLowerCase();\n    //return todo.text.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase());\n    return todoText.includes(searchText);\n  });\n\n  // console.log('Los usuarios buscan todos de: '+ searchValue);\n\n  const addTodo = text => {\n    const newTodos = [...todos];\n    newTodos.push({\n      completed: false,\n      text\n    });\n    saveTodos(newTodos);\n  };\n  const completeTodo = text => {\n    const newTodos = [...todos]; // crear copia del array\n    const todoIndex = newTodos.findIndex(todo => todo.text === text // buscar el indice del todo que se quiere completar\n    );\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  };\n  const deleteTodo = text => {\n    const newTodos = [...todos]; // crear copia del array\n    const todoIndex = newTodos.findIndex(todo => todo.text === text // buscar el indice del todo que se quiere completar\n    );\n    newTodos.splice(todoIndex, 1); // eliminar un todo del array\n    saveTodos(newTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: {\n      loading,\n      error,\n      completedTodos,\n      totalTodos,\n      searchValue,\n      setSearchValue,\n      searchedTodos,\n      completeTodo,\n      deleteTodo,\n      openModal,\n      setOpenModal,\n      addTodo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(TodoProvider, \"AOOohhFzo5lB6AEjkGD06n+L2Sw=\", false, function () {\n  return [useLocalStorage];\n});\n_c = TodoProvider;\nexport { TodoContext, TodoProvider };\nvar _c;\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"names":["React","useLocalStorage","jsxDEV","_jsxDEV","TodoContext","createContext","TodoProvider","children","_s","item","todos","saveItem","saveTodos","loading","error","searchValue","setSearchValue","useState","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Juan_Diego/Projects/React/to-do-list/src/TodoContext/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { useLocalStorage } from './useLocalStorage';\r\n\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider({children}){\r\n    const {\r\n        item: todos, \r\n        saveItem: saveTodos,\r\n        loading,\r\n        error,\r\n      } = useLocalStorage('TODOS_V1', []);\r\n      const [searchValue, setSearchValue] = React.useState('');\r\n\r\n      const [openModal, setOpenModal] = React.useState(false);\r\n    \r\n      const completedTodos = todos.filter(\r\n        todo => !!todo.completed).length;\r\n    \r\n      const totalTodos = todos.length;\r\n    \r\n      const searchedTodos = todos.filter(\r\n        (todo) => {\r\n          const todoText = todo.text.toLowerCase();\r\n          const searchText = searchValue.toLowerCase();\r\n          //return todo.text.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase());\r\n          return todoText.includes(searchText);\r\n        }\r\n      );\r\n    \r\n      // console.log('Los usuarios buscan todos de: '+ searchValue);\r\n\r\n      const addTodo = (text) => {\r\n        const newTodos = [...todos];\r\n        newTodos.push({\r\n          completed: false,\r\n          text,\r\n        });\r\n        saveTodos(newTodos);\r\n      };\r\n    \r\n      \r\n      const completeTodo = (text) => {\r\n        const newTodos = [...todos]; // crear copia del array\r\n        const todoIndex = newTodos.findIndex(\r\n          (todo) => todo.text === text // buscar el indice del todo que se quiere completar\r\n        );\r\n        newTodos[todoIndex].completed = true;\r\n        saveTodos(newTodos);\r\n      };\r\n    \r\n      const deleteTodo = (text) => {\r\n        const newTodos = [...todos]; // crear copia del array\r\n        const todoIndex = newTodos.findIndex(\r\n          (todo) => todo.text === text // buscar el indice del todo que se quiere completar\r\n        );\r\n        newTodos.splice(todoIndex, 1); // eliminar un todo del array\r\n        saveTodos(newTodos);\r\n      };\r\n\r\n      \r\n\r\n\r\n    return(\r\n        <TodoContext.Provider value={{\r\n            loading,\r\n            error,\r\n            completedTodos,\r\n            totalTodos,\r\n            searchValue,\r\n            setSearchValue,\r\n            searchedTodos,\r\n            completeTodo,\r\n            deleteTodo,\r\n            openModal,\r\n            setOpenModal,\r\n            addTodo,\r\n        }}>\r\n            {children}\r\n        </TodoContext.Provider>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport { TodoContext, TodoProvider };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}